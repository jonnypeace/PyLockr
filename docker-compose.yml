version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    volumes:
      - ./backup:/usr/src/app/backup
      - ./config/ssl:/usr/src/app/ssl # Encryption keys
    environment:
      - BACKUP_DIR=/usr/src/app/backup
      - SESSION_TIMEOUT=30
      - MIN_PASSWORD_LENGTH=10
    env_file:
      - .env
    depends_on:
      - redis
      - mariadb  # Ensure the web service starts after MariaDB is ready
    networks:
      - pylockr-network

  scheduler:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_Scheduler
    volumes:
      - ./backup:/usr/src/app/backup
      - ./config/ssl:/usr/src/app/ssl # Encryption keys
    environment:
      - BACKUP_DIR=/usr/src/app/backup
      - MAX_DB_BACKUPS=42
      - BACKUP_FREQUENCY=240
      - RUN_SCHEDULER=true
    env_file:
      - .env
    depends_on:
      - redis
      - mariadb  # Ensure the scheduler service starts after MariaDB is ready
    networks:
      - pylockr-network

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - pylockr-network

  mariadb:
    image: mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=pylockrdb
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./config/cnf:/etc/mysql/conf.d  # Custom my.cnf
      - ./config/ssl:/etc/mysql/ssl  # SSL Encryption keys
      - ./config/keys:/etc/mysql/encryption  # Data at Rest Encryption key

    networks:
      - pylockr-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./config/ssl:/etc/ssl/private:ro
    depends_on:
      - web
    networks:
      - pylockr-network

networks:
  pylockr-network:
    driver: bridge

volumes:
  mariadb_data: {}
